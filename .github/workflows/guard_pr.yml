name: guard_pr
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr_check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install matplotlib
      - run: bash scripts/start_t1000.sh t1000
      - run: bash scripts/verify_t1000.sh t1000
      - run: python3 scripts/metrics_rollup.py

      - id: parse
        run: |
          SUM=artifacts/t1000/latest/verify_summary.txt
          ROWS=$(awk -F'[=, ]+' '{for(i=1;i<=NF;i++) if($i=="rows"){print $(i+1); exit}}' "$SUM")
          PR=$(awk   -F'[=, ]+' '{for(i=1;i<=NF;i++) if($i=="pass_rate"){print $(i+1); exit}}' "$SUM")
          DP=$(awk   -F'[=, ]+' '{for(i=1;i<=NF;i++) if($i=="delta_pp"){print $(i+1); exit}}' "$SUM")
          echo "rows=$ROWS" >> $GITHUB_OUTPUT
          echo "pass_rate=$PR" >> $GITHUB_OUTPUT
          echo "delta_pp=$DP" >> $GITHUB_OUTPUT

      - name: PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const rows = core.getInput('rows', { required: false }) || '${{ steps.parse.outputs.rows }}';
            const pr   = core.getInput('pass_rate', { required: false }) || '${{ steps.parse.outputs.pass_rate }}';
            const dp   = core.getInput('delta_pp', { required: false }) || '${{ steps.parse.outputs.delta_pp }}';
            const body = `T1000 Report\n\nrows: ${rows}\npass_rate: ${pr}\ndelta_pp: ${dp}`;
            const { owner, repo } = context.repo;
            await github.rest.issues.createComment({ owner, repo, issue_number: context.issue.number, body });

      - name: Fail guard
        env:
          THRESHOLD: "0.70"
        run: |
          PR="${{ steps.parse.outputs.pass_rate }}"
          TH="${THRESHOLD}"
          awk -v pr="$PR" -v th="$TH" 'BEGIN{if(pr+0<th+0) exit 1}'
