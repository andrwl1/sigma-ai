name: guard_pr

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - '.github/workflows/**'

permissions:
  contents: read
  pull-requests: write

jobs:
  pr_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: |
          python -m pip install --upgrade pip
          pip install matplotlib
      - run: |
          bash scripts/start_t1000.sh t1000
          bash scripts/verify_t1000.sh t1000
          python3 scripts/metrics_rollup.py
      - id: parse
        run: |
          SUM=artifacts/t1000/latest/verify_summary.txt
          ROWS=$(awk -F'[=, ]+' '{for(i=1;i<=NF;i++) if($i=="rows"){print $(i+1); exit}}' "$SUM")
          PR=$(awk  -F'[=, ]+' '{for(i=1;i<=NF;i++) if($i=="pass_rate"){print $(i+1); exit}}' "$SUM")
          DP=$(awk  -F'[=, ]+' '{for(i=1;i<=NF;i++) if($i=="delta_pp"){print $(i+1); exit}}' "$SUM")
          echo "rows=$ROWS" >> "$GITHUB_OUTPUT"
          echo "pass_rate=$PR" >> "$GITHUB_OUTPUT"
          echo "delta_pp=$DP" >> "$GITHUB_OUTPUT"
      - name: PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const rows = '${{ steps.parse.outputs.rows }}';
            const passRate = '${{ steps.parse.outputs.pass_rate }}';
            const deltaPP = '${{ steps.parse.outputs.delta_pp }}';
            const body = `**T1000 quick report**\n\n- rows: ${rows}\n- pass_rate: ${passRate}\n- delta_pp: ${deltaPP}`;
            const { context, github } = require('@actions/github');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
